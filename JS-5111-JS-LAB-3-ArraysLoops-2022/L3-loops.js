/* LESSON 3 - LOOPS */
var animalArray = [
  "Monkey",
  "Cat",
  "Dog",
  "Horse",
  "Goat",
  "Elephant",
  "Ox",
  "Rabbit",
  "Bat",
  "Bird",
];

//for LOOP - THE COUNTER LOOP - RUNS A SET NUMBER OF TIMES
//NEEDS 3 THINGS: INTIALIZATION; CONDITION; INCREMENTER
//OR... START; if CONDITION; LAP COUNTER
for (var i = 0; i < 10; i = i + 1) {
  // INITIALIZE @ POSITION 0; IF LOOP (aka i) IS LESS THAN 10, RUN AGAIN; HOW MANY INCREMENTS i GOES UP BY AFTER EACH LOOP
  console.log("Right now, i = " + i);
}

// LOOP DECLARES VARIABLE i (TRADITIONAL NAME FOR THE LOOP VARIABLE) AND SETS VALUE TO 0.
//NOTICE THE ; RIGHT AFTER. WE ARE SQUEEZING 3 STATEMENTS INTO PARENTHESIS.
//NEXT, WE SET THE RUNNING CONDITION. IN THIS CASE, THIS LOOP WILL RUN AS LONG AS i IS LESS THAN 10.
//FINALLY, WE TELL THE LOOP TO INCREASE THE VALUE OF i BY ONE AFTER EACH LOOP.
//NOTE: SHORTCUT MOST DEVELOPERS USE FOR THIS IS i++
//WITHIN CURLY BRACES IS THE CODE TO RUN EACH TIME.

//CAN ALSO USE INCREMENTER PART AS A DECREMENTER AND CREATE A COUNTDOWN BY USING i-- INSTEAD OF i++.
for (var i = 10; i >= 0; i--) {
  console.log("Right now, i = " + i);
}

//LOOPS MOST OFTEN USED TO ACCESS ALL ELEMENTS OF ANY ARRAY
//LOOPING THROUGH AN ARRAY
for (var i = 0; i < 7; i++) {
  console.log("Animal at index = #" + i + " is: " + animalArray[i]);
}

//BECAUSE LENGTH OF ARRAYS OFTEN VARY, WE SHOULD DYNAMICALLY ADJUST RUNNING CONDITION OF LOOP WITH length PROPERTY
for (var i = 0; i < animalArray.length; i++) {
  console.log(animalArray[i]);
}

//##### while LOOP - THE "STATE" LOOP #####
//THE WHILE LOOP IS OFTEN USED WHEN YOU DON'T KNOW HOW MANY TIMES A LOOP
//SHOULD RUN, JUST THAT IT SHOULD RUN AS LONG AS A CERTAIN CONDITION OR
//STATE IS TRUE
